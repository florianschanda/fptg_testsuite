;; Random floating-point test generated by fp_test_generator
;;
;; Seed information:
;;    input_kind = -max_normal
;;    operation = float_to_float
;;    precision_source = random_symmetrical
;;    precision_target = float64
;;    rounding_mode = RNE
;;
;; Test oracle(s) for this test:
;;    * PyMPF

(set-info :smt-lib-version 2.6)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :source |https://github.com/florianschanda/fp_test_generator|)
(set-info :status unsat)
(set-logic QF_FP)

(define-const potato (_ FloatingPoint 6 6) (fp #b1 #b111110 #b11111))
;; should be -4227858432.0
;;   isZero      : False
;;   isSubnormal : False
;;   isNormal    : True
;;   isInfinite  : False
;;   isNan       : False
;;   isNegative  : True
;;   isPositive  : False
;;   isFinite    : True
;;   isIntegral  : True

(define-const expected_result Float64 (fp #b1 #b10000011110 #b1111100000000000000000000000000000000000000000000000))
;; should be -4227858432.0
;;   isZero      : False
;;   isSubnormal : False
;;   isNormal    : True
;;   isInfinite  : False
;;   isNan       : False
;;   isNegative  : True
;;   isPositive  : False
;;   isFinite    : True
;;   isIntegral  : True

(define-const computed_result Float64 ((_ to_fp 11 53) RNE potato))

;; goal
(assert (not (= expected_result computed_result)))

(check-sat)
(exit)
