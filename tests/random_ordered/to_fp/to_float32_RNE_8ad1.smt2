;; Random floating-point test generated by fp_test_generator
;;
;; Seed information:
;;    input_kind = +max_normal
;;    operation = float_to_float
;;    precision_source = random_ordered
;;    precision_target = float32
;;    rounding_mode = RNE
;;
;; Test oracle(s) for this test:
;;    * PyMPF

(set-info :smt-lib-version 2.6)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :source |https://github.com/florianschanda/fp_test_generator|)
(set-info :status sat)
(set-logic QF_FP)

(define-const potato (_ FloatingPoint 3 9) (fp #b0 #b110 #b11111111))
;; should be 15.96875
;;   isZero      : False
;;   isSubnormal : False
;;   isNormal    : True
;;   isInfinite  : False
;;   isNan       : False
;;   isNegative  : False
;;   isPositive  : True
;;   isFinite    : True
;;   isIntegral  : False

(define-const expected_result Float32 (fp #b0 #b10000010 #b11111111000000000000000))
;; should be 15.96875
;;   isZero      : False
;;   isSubnormal : False
;;   isNormal    : True
;;   isInfinite  : False
;;   isNan       : False
;;   isNegative  : False
;;   isPositive  : True
;;   isFinite    : True
;;   isIntegral  : False

(define-const computed_result Float32 ((_ to_fp 8 24) RNE potato))

;; goal
(assert (= expected_result computed_result))

(check-sat)
(exit)
